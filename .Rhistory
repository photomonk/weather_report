setwd("~/projects/r project")
source("~/projects/r project/preprocessing_and_analysis.R")
# Load your dataset
weather_data <- read.csv("weather_data.csv")
source("~/projects/r project/temperature trends.R")
# Create a line plot for temperature with daily average
ggplot() +
# Individual temperature readings (if you have multiple readings per day)
geom_line(data = weather_data,
aes(x = date, y = temperature, group = date),
alpha = 0.3, color = "gray") +
# Daily average line
geom_line(data = daily_avg_temp,
aes(x = date, y = avg_temp),
color = "red", size = 1) +
labs(title = "Temperature Trends Over the Month",
x = "Date",
y = "Temperature (Â°C)") +
theme_minimal() +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week")
source("~/projects/r project/heatmap.R")
source("~/projects/r project/heatmap.R")
source("~/projects/r project/heatmap.R")
library(ggplot2)
library(reshape2)
library(dplyr)
# Calculate correlation matrix (including only numeric columns)
correlation_matrix <- weather_data %>%
select(where(is.numeric)) %>%
cor(use = "complete.obs")
# Melt for ggplot
correlation_melted <- melt(correlation_matrix) %>%
mutate(Var1 = factor(Var1, levels = unique(Var1)),
Var2 = factor(Var2, levels = rev(unique(Var2))))
# Create heatmap with classic red-blue diverging colors
ggplot(correlation_melted, aes(Var1, Var2, fill = value)) +
geom_tile(color = "white", linewidth = 0.4) +  # Clean white borders
geom_text(aes(label = round(value, 2)),  # Display correlation values
color = ifelse(abs(correlation_melted$value) > 0.5, "white", "black"),
size = 3.8) +
scale_fill_gradient2(low = "#2b83ba", mid = "white", high = "#d7191c",
midpoint = 0, limit = c(-1,1), space = "Lab",
name = "Correlation") +
labs(title = "Weather Variables Correlation Matrix",
x = NULL, y = NULL) +
theme_minimal(base_size = 12) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
panel.grid = element_blank(),
plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
legend.position = "right",
legend.key.height = unit(1.5, "cm")
) +
coord_fixed()  # Perfect square tiles
source("~/projects/r project/windspeed_barchart.R")
# Create a bar chart for wind speed
ggplot(avg_wind_speed_by_time, aes(x = date, y = avg_wind_speed)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Average Wind Speed by date",
x = "Date",
y = "Average Wind Speed (m/s)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
source("~/projects/r project/humidity over time.R")
source("~/projects/r project/humidity over time.R")
source("~/projects/r project/humidity over time.R")
# Convert date if needed and ensure proper ordering
weather_data <- weather_data %>%
mutate(date = as.Date(date)) %>%
arrange(date)  # Ensure chronological order
# Basic area chart
ggplot(weather_data, aes(x = date, y = humidity)) +
geom_area(fill = "#69b3a2", alpha = 0.5) +  # Semi-transparent fill
labs(title = "Humidity Over Time",
x = "Date",
y = "Humidity (%)") +
theme_minimal() +
scale_x_date(date_labels = "%b %d", date_breaks = "1 week")
